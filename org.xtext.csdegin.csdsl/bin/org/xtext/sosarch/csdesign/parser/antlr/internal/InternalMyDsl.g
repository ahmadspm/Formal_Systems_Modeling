/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.sosarch.csdesign.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.sosarch.csdesign.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.sosarch.csdesign.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ConstiuteintsystemDesign";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleConstiuteintsystemDesign
entryRuleConstiuteintsystemDesign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstiuteintsystemDesignRule()); }
	iv_ruleConstiuteintsystemDesign=ruleConstiuteintsystemDesign
	{ $current=$iv_ruleConstiuteintsystemDesign.current; }
	EOF;

// Rule ConstiuteintsystemDesign
ruleConstiuteintsystemDesign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='parameters_list'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstiuteintsystemDesignAccess().getParameters_listKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConstiuteintsystemDesignAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstiuteintsystemDesignAccess().getActionsRatesParserRuleCall_2_0_0());
					}
					lv_actions_2_0=rulerates
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstiuteintsystemDesignRule());
						}
						add(
							$current,
							"actions",
							lv_actions_2_0,
							"org.xtext.sosarch.csdesign.MyDsl.rates");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getConstiuteintsystemDesignAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstiuteintsystemDesignAccess().getActionRatesParserRuleCall_2_1_1_0());
						}
						lv_action_4_0=rulerates
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstiuteintsystemDesignRule());
							}
							add(
								$current,
								"action",
								lv_action_4_0,
								"org.xtext.sosarch.csdesign.MyDsl.rates");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConstiuteintsystemDesignAccess().getRightParenthesisKeyword_3());
		}
		otherlv_6='CS'
		{
			newLeafNode(otherlv_6, grammarAccess.getConstiuteintsystemDesignAccess().getCSKeyword_4());
		}
		(
			(
				lv_name_7_0=RULE_ID
				{
					newLeafNode(lv_name_7_0, grammarAccess.getConstiuteintsystemDesignAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstiuteintsystemDesignRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getConstiuteintsystemDesignAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstiuteintsystemDesignAccess().getPortsPortParserRuleCall_7_0());
				}
				lv_ports_9_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstiuteintsystemDesignRule());
					}
					add(
						$current,
						"ports",
						lv_ports_9_0,
						"org.xtext.sosarch.csdesign.MyDsl.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPortAccess().getPortAction_0_0(),
						$current);
				}
			)
			otherlv_1='port'
			{
				newLeafNode(otherlv_1, grammarAccess.getPortAccess().getPortKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPortAccess().getProvidesProvideParserRuleCall_0_3_0());
					}
					lv_provides_3_0=ruleprovide
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortRule());
						}
						add(
							$current,
							"provides",
							lv_provides_3_0,
							"org.xtext.sosarch.csdesign.MyDsl.provide");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPortAccess().getPortAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPortAccess().getRequiresRequireParserRuleCall_1_1_0());
					}
					lv_requires_5_0=rulerequire
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPortRule());
						}
						add(
							$current,
							"requires",
							lv_requires_5_0,
							"org.xtext.sosarch.csdesign.MyDsl.require");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleStochaticConstriants
entryRuleStochaticConstriants returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStochaticConstriantsRule()); }
	iv_ruleStochaticConstriants=ruleStochaticConstriants
	{ $current=$iv_ruleStochaticConstriants.current; }
	EOF;

// Rule StochaticConstriants
ruleStochaticConstriants returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStochaticConstriantsAccess().getStochaticConstriantsAction_0(),
					$current);
			}
		)
		otherlv_1='Stochastic'
		{
			newLeafNode(otherlv_1, grammarAccess.getStochaticConstriantsAccess().getStochasticKeyword_1());
		}
		otherlv_2='Cconstraints'
		{
			newLeafNode(otherlv_2, grammarAccess.getStochaticConstriantsAccess().getCconstraintsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStochaticConstriantsAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='Tell'
			{
				newLeafNode(otherlv_4, grammarAccess.getStochaticConstriantsAccess().getTellKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getStochaticConstriantsAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStochaticConstriantsAccess().getConstraintShareDateShardataParserRuleCall_4_2_0());
					}
					lv_ConstraintShareDate_6_0=ruleshardata
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStochaticConstriantsRule());
						}
						add(
							$current,
							"ConstraintShareDate",
							lv_ConstraintShareDate_6_0,
							"org.xtext.sosarch.csdesign.MyDsl.shardata");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='.'
			{
				newLeafNode(otherlv_7, grammarAccess.getStochaticConstriantsAccess().getFullStopKeyword_4_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStochaticConstriantsAccess().getRateRatesParserRuleCall_4_4_0());
					}
					lv_rate_8_0=rulerates
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStochaticConstriantsRule());
						}
						add(
							$current,
							"rate",
							lv_rate_8_0,
							"org.xtext.sosarch.csdesign.MyDsl.rates");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getStochaticConstriantsAccess().getRightParenthesisKeyword_4_5());
			}
		)*
		(
			otherlv_10='Ask'
			{
				newLeafNode(otherlv_10, grammarAccess.getStochaticConstriantsAccess().getAskKeyword_5_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getStochaticConstriantsAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStochaticConstriantsAccess().getConstraintDataDatatoinferParserRuleCall_5_2_0());
					}
					lv_ConstraintData_12_0=ruleDatatoinfer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStochaticConstriantsRule());
						}
						add(
							$current,
							"ConstraintData",
							lv_ConstraintData_12_0,
							"org.xtext.sosarch.csdesign.MyDsl.Datatoinfer");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='.'
			{
				newLeafNode(otherlv_13, grammarAccess.getStochaticConstriantsAccess().getFullStopKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStochaticConstriantsAccess().getRateRatesParserRuleCall_5_4_0());
					}
					lv_rate_14_0=rulerates
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStochaticConstriantsRule());
						}
						add(
							$current,
							"rate",
							lv_rate_14_0,
							"org.xtext.sosarch.csdesign.MyDsl.rates");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getStochaticConstriantsAccess().getRightParenthesisKeyword_5_5());
			}
		)*
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getStochaticConstriantsAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getStochaticConstriantsAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDatatoinfer
entryRuleDatatoinfer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatatoinferRule()); }
	iv_ruleDatatoinfer=ruleDatatoinfer
	{ $current=$iv_ruleDatatoinfer.current; }
	EOF;

// Rule Datatoinfer
ruleDatatoinfer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getDatatoinferAccess().getAskfordataAction(),
				$current);
		}
	)
;

// Entry rule entryRuleshardata
entryRuleshardata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShardataRule()); }
	iv_ruleshardata=ruleshardata
	{ $current=$iv_ruleshardata.current; }
	EOF;

// Rule shardata
ruleshardata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			$current = forceCreateModelElement(
				grammarAccess.getShardataAccess().getTellDataAction(),
				$current);
		}
	)
;

// Entry rule entryRuleSystemTranstions
entryRuleSystemTranstions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemTranstionsRule()); }
	iv_ruleSystemTranstions=ruleSystemTranstions
	{ $current=$iv_ruleSystemTranstions.current; }
	EOF;

// Rule SystemTranstions
ruleSystemTranstions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Iterate'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemTranstionsAccess().getIterateKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemTranstionsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='transtions'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemTranstionsAccess().getTranstionsKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getSystemTranstionsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemTranstionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemTranstionsAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemTranstionsAccess().getStatesStateParserRuleCall_5_0_0());
					}
					lv_states_5_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemTranstionsRule());
						}
						add(
							$current,
							"states",
							lv_states_5_0,
							"org.xtext.sosarch.csdesign.MyDsl.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemTranstionsAccess().getEventsEventParserRuleCall_5_1_0());
					}
					lv_events_6_0=ruleEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemTranstionsRule());
						}
						add(
							$current,
							"events",
							lv_events_6_0,
							"org.xtext.sosarch.csdesign.MyDsl.Event");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSystemTranstionsAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='state'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_3_0());
				}
				lv_transitions_3_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_3_0,
						"org.xtext.sosarch.csdesign.MyDsl.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getEventEventCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getRateRatesCrossReference_2_0());
				}
			)
		)
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getTargetStateCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRulesend
entryRulesend returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSendRule()); }
	iv_rulesend=rulesend
	{ $current=$iv_rulesend.current.getText(); }
	EOF;

// Rule send
rulesend returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='send_data'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getSendAccess().getSend_dataKeyword());
	}
;

// Entry rule entryRulereceive
entryRulereceive returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReceiveRule()); }
	iv_rulereceive=rulereceive
	{ $current=$iv_rulereceive.current.getText(); }
	EOF;

// Rule receive
rulereceive returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='recieve_data'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getReceiveAccess().getRecieve_dataKeyword());
	}
;

// Entry rule entryRulerates
entryRulerates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRatesRule()); }
	iv_rulerates=rulerates
	{ $current=$iv_rulerates.current; }
	EOF;

// Rule rates
rulerates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actionrates'
		{
			newLeafNode(otherlv_0, grammarAccess.getRatesAccess().getActionratesKeyword_0());
		}
		(
			(
				lv_rates_1_0=RULE_INT
				{
					newLeafNode(lv_rates_1_0, grammarAccess.getRatesAccess().getRatesINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRatesRule());
					}
					setWithLastConsumed(
						$current,
						"rates",
						lv_rates_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getRatesAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			newLeafNode(this_INT_3, grammarAccess.getRatesAccess().getINTTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='event'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventAccess().getEventKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getEventAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getEventAccess().getOperationOperationCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRulerequire
entryRulerequire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequireRule()); }
	iv_rulerequire=rulerequire
	{ $current=$iv_rulerequire.current; }
	EOF;

// Rule require
rulerequire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='requires'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequireAccess().getRequiresKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequireAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequireRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleprovide
entryRuleprovide returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProvideRule()); }
	iv_ruleprovide=ruleprovide
	{ $current=$iv_ruleprovide.current; }
	EOF;

// Rule provide
ruleprovide returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='provides'
		{
			newLeafNode(otherlv_0, grammarAccess.getProvideAccess().getProvidesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProvideAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProvideRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
