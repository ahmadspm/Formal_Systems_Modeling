/**
 * generated by Xtext 2.19.0
 */
package org.xtext.sosarch.csdesign.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.sosarch.csdesign.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.CONSTIUTEINTSYSTEM_DESIGN: return createConstiuteintsystemDesign();
      case MyDslPackage.PORT: return createPort();
      case MyDslPackage.STOCHASTICBEHAVIOR: return createStochasticbehavior();
      case MyDslPackage.STOCHATIC_CONSTRIANTS: return createStochaticConstriants();
      case MyDslPackage.DATATOINFER: return createDatatoinfer();
      case MyDslPackage.SHARDATA: return createshardata();
      case MyDslPackage.SYSTEM_TRANSTIONS: return createSystemTranstions();
      case MyDslPackage.STATE: return createState();
      case MyDslPackage.TRANSITION: return createTransition();
      case MyDslPackage.OPERATION: return createOperation();
      case MyDslPackage.RATES: return createrates();
      case MyDslPackage.EVENT: return createEvent();
      case MyDslPackage.REQUIRE: return createrequire();
      case MyDslPackage.PROVIDE: return createprovide();
      case MyDslPackage.STOCHATIC_BEHAVIOR: return createStochaticBehavior();
      case MyDslPackage.ASKFORDATA: return createAskfordata();
      case MyDslPackage.TELL_DATA: return createTellData();
      case MyDslPackage.OPERATIONS: return createoperations();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConstiuteintsystemDesign createConstiuteintsystemDesign()
  {
    ConstiuteintsystemDesignImpl constiuteintsystemDesign = new ConstiuteintsystemDesignImpl();
    return constiuteintsystemDesign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Port createPort()
  {
    PortImpl port = new PortImpl();
    return port;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Stochasticbehavior createStochasticbehavior()
  {
    StochasticbehaviorImpl stochasticbehavior = new StochasticbehaviorImpl();
    return stochasticbehavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StochaticConstriants createStochaticConstriants()
  {
    StochaticConstriantsImpl stochaticConstriants = new StochaticConstriantsImpl();
    return stochaticConstriants;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Datatoinfer createDatatoinfer()
  {
    DatatoinferImpl datatoinfer = new DatatoinferImpl();
    return datatoinfer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public shardata createshardata()
  {
    shardataImpl shardata = new shardataImpl();
    return shardata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SystemTranstions createSystemTranstions()
  {
    SystemTranstionsImpl systemTranstions = new SystemTranstionsImpl();
    return systemTranstions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public State createState()
  {
    StateImpl state = new StateImpl();
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Transition createTransition()
  {
    TransitionImpl transition = new TransitionImpl();
    return transition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Operation createOperation()
  {
    OperationImpl operation = new OperationImpl();
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public rates createrates()
  {
    ratesImpl rates = new ratesImpl();
    return rates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public require createrequire()
  {
    requireImpl require = new requireImpl();
    return require;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public provide createprovide()
  {
    provideImpl provide = new provideImpl();
    return provide;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StochaticBehavior createStochaticBehavior()
  {
    StochaticBehaviorImpl stochaticBehavior = new StochaticBehaviorImpl();
    return stochaticBehavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Askfordata createAskfordata()
  {
    AskfordataImpl askfordata = new AskfordataImpl();
    return askfordata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TellData createTellData()
  {
    TellDataImpl tellData = new TellDataImpl();
    return tellData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public operations createoperations()
  {
    operationsImpl operations = new operationsImpl();
    return operations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
